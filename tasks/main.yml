---
- name: OpenSSL installed (Debian)
  sudo: yes
  apt:
    name: openssl
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: OpenSSL installed (RedHat)
  sudo: yes
  yum:
    name: openssl
    state: present
  when: ansible_os_family == 'RedHat'

- name: Confirm keys directory
  sudo: yes
  file:
    path: "{{ openssl_keys_path }}"
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Confirm certificate directory
  sudo: yes
  file:
    path: "{{ openssl_certs_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Self-signed certificates
  sudo: yes
  command: >
    openssl req -x509 -nodes -days {{ item.days | default(3650) }}
    -newkey rsa:{{ item.bits | default(2048) }}
    -keyout {{ openssl_keys_path }}/{{ item.name }}.key
    -out {{ openssl_certs_path }}/{{ item.name }}.crt
    -subj "/C={{ item.country | default('') }}/ST={{ item.state | default('') }}/L={{ item.city | default('') }}/O={{ item.organization | default('') }}/OU={{ item.unit | default('') }}{% if item.domains is defined %}{% for domain in item.domains %}/CN={{ domain }}{% endfor %}{% else %}/CN={{ item.name }}{% endif %}/emailAddress={{ item.email | default('') }}"
    creates={{ openssl_certs_path }}/{{ item.name }}.crt
  with_items: openssl_self_signed

- name: Imported SSL keys
  sudo: yes
  copy:
    content: "{{ item.content }}"
    dest: "{{ openssl_keys_path }}/{{ item.name }}.key"
    owner: root
    group: root
    mode: 0644
  with_items: openssl_import_keys

- name: Imported SSL certificates
  sudo: yes
  copy:
    content: "{{ item.content }}"
    dest: "{{ openssl_certs_path }}/{{ item.name }}.crt"
    owner: root
    group: root
    mode: 0644
  with_items: openssl_import_certs
